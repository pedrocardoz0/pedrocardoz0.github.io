[{"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam condimentum eros non lectus facilisis, ac commodo dui tincidunt. Maecenas venenatis elit maximus arcu sollicitudin, vitae tempus nunc suscipit. Pellentesque ut felis elementum, luctus nibh sed, scelerisque nibh. Vestibulum eu turpis eget arcu faucibus malesuada vel quis arcu. Mauris ac purus tincidunt, sollicitudin lorem vel, pulvinar elit. Curabitur sit amet ipsum vitae ante vestibulum tincidunt. Sed a urna venenatis, fermentum nisl et, porta quam. Nam ante dui, hendrerit a iaculis ac, scelerisque vel ligula. Donec in dictum neque, vitae tincidunt ex. Curabitur condimentum lorem vel finibus vehicula. Integer pulvinar dui enim, eu porttitor lectus consectetur sed. Etiam eleifend justo vel felis imperdiet, et auctor ante scelerisque. Proin varius interdum fringilla. Vestibulum posuere justo in tortor aliquet, eget laoreet libero elementum. Aliquam ac commodo elit. Nam maximus odio nulla, id imperdiet nibh fringilla in.\nDonec in dictum neque, vitae tincidunt ex. Curabitur condimentum lorem vel finibus vehicula. Integer pulvinar dui enim, eu porttitor lectus consectetur sed. Etiam eleifend justo vel felis imperdiet, et auctor ante scelerisque. Proin varius interdum fringilla. Vestibulum posuere justo in tortor aliquet, eget laoreet libero elementum. Aliquam ac commodo elit. Nam maximus odio nulla, id imperdiet nibh fringilla in.\n","permalink":"https://pedrocardoz0.github.io/posts/rust/","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam condimentum eros non lectus facilisis, ac commodo dui tincidunt. Maecenas venenatis elit maximus arcu sollicitudin, vitae tempus nunc suscipit. Pellentesque ut felis elementum, luctus nibh sed, scelerisque nibh. Vestibulum eu turpis eget arcu faucibus malesuada vel quis arcu. Mauris ac purus tincidunt, sollicitudin lorem vel, pulvinar elit. Curabitur sit amet ipsum vitae ante vestibulum tincidunt. Sed a urna venenatis, fermentum nisl et, porta quam.","title":"rust"},{"content":"Intro We\u0026rsquo;ll be using yml/yaml format for all examples down below, I recommend using yml over toml as it is easier to read.\nYou can find any YML to TOML converters if necessary.\nOverride theme template By Hugo\u0026rsquo;s Lookup Order, you can override any part of a theme that you want. The following is a quick example.\nLet\u0026rsquo;s say you wish the list was different. All you have to do is copy the list template:\nyour-site/themes/papermod/layouts/_defaults/list.html And paste it under your own layouts folder:\nyour-site/layouts/_defaults/list.html Then you\u0026rsquo;re free to make any changes you want to the list. When Hugo builds your site, your copy of list.html will be used instead of the theme\u0026rsquo;s list.html.\nEnable Social-Metadata and SEO These include OpenGraph, Twitter Cards and Schema.\nparams: env: production or set HUGO_ENV as \u0026ldquo;production\u0026rdquo; in system env-vars\nFailed to find a valid digest in the \u0026lsquo;integrity\u0026rsquo; attribute for resource \u0026hellip; ? Read about How Subresource Integrity helps: Subresource_Integrity\nWhy was the asset not loading ? : How_browsers_handle_Subresource_Integrity\nSolution:\nSet the following in config.yml\nparams: assets: disableFingerprinting: true Linked Issues:\nhttps://stackoverflow.com/questions/65056585/hugo-theme-not-loading https://stackoverflow.com/questions/65040931/hugo-failed-to-find-a-valid-digest-in-the-integrity-attribute-for-resource https://blog.gerardbeckerleg.com/posts/hugo-failed-to-find-a-valid-digest-in-the-integrity-attribute-for-resource/ Bundling Custom css with theme\u0026rsquo;s assets For adding custom css to be bundled inside one minimized css Create folder in yout project directory as\n.(site root) ├── config.yml ├── content/ ├── theme/hugo-PaperMod/ └── assets/ └── css/ └── extended/ \u0026lt;--- ├── custom_css1.css \u0026lt;--- └── any_name.css \u0026lt;--- All css files inside assets/css/extended will be bundled !\nNote: blank.css is just the placeholder so that it doesn\u0026rsquo;t break the theme when no files are present under assets/css/extended\nLinked Issues:\nPapermod Theme: How to add custom CSS? Custom Head / Footer Custom css/js can be added by way mentioned below.\n.(site root) ├── config.yml ├── content/ ├── theme/hugo-PaperMod/ └── layouts ├── partials │ ├── comments.html │ ├── extend_footer.html \u0026lt;--- │ └── extend_head.html \u0026lt;--- └── robots.txt Create a html page in directory structure as shown above.\nContents of extend_head.html will be added to head of page.\nand contents of extend_footer.html will be added to bottom of page.\nAdd menu to site You can add menu entries which will appear in the header of every page.\nTo do so, add a menu section to your site\u0026rsquo;s config.yml:\nmenu: main: - identifier: categories name: categories url: /categories/ weight: 10 - identifier: tags name: tags url: /tags/ weight: 20 - identifier: example name: example.org url: https://example.org weight: 30 name controls what will be displayed for the menu entry. url sets the URL that the entry points to. weight is used to control the positioning of entries.\nFor more information on menus, see the Hugo wiki page.\nPin a Post Post can be pinned/ displayed top on the list by adding a weight=\u0026lt;num\u0026gt; var to page-variables\nexample:\n--- title: \u0026#34;My Important post\u0026#34; date: 2020-09-15T11:30:03+00:00 weight: 1 --- --- title: \u0026#34;My 2nd Important post\u0026#34; date: 2020-09-15T11:30:03+00:00 weight: 2 --- Adding Custom Favicon(s) We support the following paths under /static directory and can be added accordingly.\nfavicon.ico favicon-16x16.png favicon-32x32.png apple-touch-icon.png safari-pinned-tab.svg Favicon(s) can be generated by Favicon.io\nand can be simply put in /static folder.\nOther way is to add favicon(s) NOT located in /static folder.\nIn site config add the following:\nparams: assets: favicon: \u0026#34;\u0026lt;link / absolute url\u0026gt;\u0026#34; favicon16x16: \u0026#34;\u0026lt;link / absolute url\u0026gt;\u0026#34; favicon32x32: \u0026#34;\u0026lt;link / absolute url\u0026gt;\u0026#34; apple_touch_icon: \u0026#34;\u0026lt;link / absolute url\u0026gt;\u0026#34; safari_pinned_tab: \u0026#34;\u0026lt;link / absolute url\u0026gt;\u0026#34; absolute url means direct links to external resource: ex. https://web.site/someimage.png example:\nparams: assets: favicon: \u0026#34;/favicon.ico\u0026#34; favicon16x16: \u0026#34;/favicon-16x16.png\u0026#34; favicon32x32: \u0026#34;/favicon-32x32.png\u0026#34; apple_touch_icon: \u0026#34;/apple-touch-icon.png\u0026#34; safari_pinned_tab: \u0026#34;/safari-pinned-tab.svg\u0026#34; Centering image in markdown Add #center after image to center align an image\n![name](path/to/image.png#center) When using figure shortcode\nuse align=center to center image with captions\nex.\n{{\u0026lt; figure align=center src=\u0026#34;image.jpg\u0026#34; \u0026gt;}} Using Hugo\u0026rsquo;s Syntax highlighter \u0026ldquo;chroma\u0026rdquo; Disable Highlight.js in site config.yml\nparams: assets: disableHLJS: true Set hugo\u0026rsquo;s markdown styling in site config.yml\nmarkup: highlight: # anchorLineNos: true codeFences: true guessSyntax: true lineNos: true # noClasses: false style: monokai If you want lineNos: true, the background won\u0026rsquo;t be proper. This will only work with noClasses: false or pygmentsUseClasses: true. Read Generate Syntax Highlighter CSS\nAdd the following to assets/css/extended/custom.css\n.chroma { background-color: unset; } More Info : Configure Markup - Highlight\nSearch not working ? If you are using a CDN to server assets from a different domain, search would break\nWhy? Take a look at fastsearch.js#L35.\nWe fetch the index.json (where the search function looks for the keywords typed) one level up of the website search.min.js is hosted on.\nWe have used this insted of assigning baseURL so as to work with multilingual websites ex. example.com/fr/ and websites being placed under a subdirectory ex. example.com/blog/.\nTo fix for single language websites hosting assets from CDN, this you may override fastsearch.js#L35 and placing appropriate URL as in\nxhr.open(\u0026#34;GET\u0026#34;, \u0026#34;https://example.com/index.json\u0026#34;); References Override a Hugo theme ","permalink":"https://pedrocardoz0.github.io/posts/book/faq/","summary":"Frequently Asked Questions","title":"faqs"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Inline Code This is Inline Code\nOnly pre Code block with backticks \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with backticks and language specified 1 2 3 4 5 6 7 8 9 10 11 12 13 14 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;Sample article showcasing basic Markdown syntax and formatting for HTML elements.\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Gist List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://pedrocardoz0.github.io/posts/markdown/","summary":"\u003cp\u003eThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\u003c/p\u003e","title":"markdown syntax guide"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates (extend_head.html) like so: refer ISSUE #236 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","permalink":"https://pedrocardoz0.github.io/posts/math/","summary":"\u003cp\u003eMathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\u003c/p\u003e","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","permalink":"https://pedrocardoz0.github.io/posts/emoji/","summary":"\u003cp\u003eEmoji can be enabled in a Hugo project in a number of ways.\u003c/p\u003e","title":"emoji Support"}]